// ==UserScript==
// @name		CodeUp+
// @description	CodeUp+
// @version		0.1.3
// @icon		https://icons.duckduckgo.com/ip2/codeup.kr.ico
// @updateURL	https://github.com/JadeMin-UserScripts/CodeUp-Plus/raw/dist/index.user.js
// @downloadURL	https://github.com/JadeMin-UserScripts/CodeUp-Plus/raw/dist/index.user.js
// @match		https://*.codeup.kr/*
// @run-at		document-end
// ==/UserScript==
var{editor:S}=unsafeWindow,p=document.querySelector("input#problem_id").value,o=`editor_${p}`,u=()=>JSON.parse(localStorage.getItem(o)),v=()=>localStorage.removeItem(o),m=()=>{let e=u();return e===null?null:Date.now()>e.expires?(v(),!0):null},c=()=>{let e=u();return e===null?null:e.value},i=(e,n=5e3)=>localStorage.setItem(o,JSON.stringify({value:e,expires:Date.now()+n}));m();(({editor:e})=>{if(location.pathname!=="/submitpage.php")return;let n=e.textInput.getElement(),t=c(),s=r=>{let{row:a,column:l}=e.selection.getCursor(),d=e.session.getValue();a!==0&&l!==0&&i({code:d,cursor:{row:a,column:l}},18e5)};if(e.setOptions({useSoftTabs:!1}),e.on("click",s),n.addEventListener("keydown",s),t===null){let r=`#include <stdio.h>

int main() {
	
	
	return 0;
}`;e.session.setValue(`${r}`),e.gotoLine(4,1)}else e.session.setValue(`${t.code}`),e.gotoLine(t.cursor.row+1,t.cursor.column);e.focus()})(unsafeWindow);
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL21vZHVsZXMvc2F2ZWQudHMiLCAiLi4vc3JjL2luZGV4LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgdHlwZSB7IFNhdmVkLCBTYXZlZFdpdGhFeHBpcmVzIH0gZnJvbSBcIi4vQHR5cGVzL3NhdmVkLmpzXCI7XHJcblxyXG5jb25zdCB7IGVkaXRvciB9ID0gdW5zYWZlV2luZG93O1xyXG5cclxuXHJcblxyXG5jb25zdCBwcm9ibGVtTnVtYmVyID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNwcm9ibGVtX2lkXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlO1xyXG5jb25zdCBzdG9yYWdlTmFtZSA9IGBlZGl0b3JfJHtwcm9ibGVtTnVtYmVyfWA7XHJcbmV4cG9ydCBjb25zdCBfZ2V0U2F2ZWQgPSAoKTogU2F2ZWRXaXRoRXhwaXJlcyB8IG51bGwgPT4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlTmFtZSkhKTtcclxuZXhwb3J0IGNvbnN0IF9yZW1vdmVTYXZlZCA9ICgpOiB2b2lkID0+IGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHN0b3JhZ2VOYW1lKTtcclxuZXhwb3J0IGNvbnN0IF9jbGVhblNhdmVkID0gKCk6IHRydWUgfCBudWxsID0+IHtcclxuXHRjb25zdCBzYXZlZCA9IF9nZXRTYXZlZCgpO1xyXG5cclxuXHRpZihzYXZlZCA9PT0gbnVsbCkgcmV0dXJuIG51bGw7XHJcblx0aWYoRGF0ZS5ub3coKSA+IHNhdmVkLmV4cGlyZXMpIHtcclxuXHRcdF9yZW1vdmVTYXZlZCgpO1xyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fSBlbHNlIHJldHVybiBudWxsO1xyXG59O1xyXG5leHBvcnQgY29uc3QgZ2V0U2F2ZWQgPSAoKTogU2F2ZWQgfCBudWxsID0+IHtcclxuXHRjb25zdCBzYXZlZCA9IF9nZXRTYXZlZCgpO1xyXG5cdGlmKHNhdmVkID09PSBudWxsKSByZXR1cm4gbnVsbDtcclxuXHJcblx0cmV0dXJuIHNhdmVkLnZhbHVlO1xyXG59O1xyXG5leHBvcnQgY29uc3Qgc2V0U2F2ZWQgPSAob2JqOiB7W2tleTogc3RyaW5nXTogYW55fSwgZXhwaXJlRGF0ZTogbnVtYmVyID0gNTAwMCk6IHZvaWQgPT4ge1xyXG5cdHJldHVybiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlTmFtZSwgSlNPTi5zdHJpbmdpZnkoe1xyXG5cdFx0dmFsdWU6IG9iaixcclxuXHRcdGV4cGlyZXM6IERhdGUubm93KCkgKyBleHBpcmVEYXRlXHJcblx0fSkpO1xyXG59O1xyXG5cclxuLy8g7LSI6riw7ZmUXHJcbl9jbGVhblNhdmVkKCk7IiwgImltcG9ydCB0eXBlIHsgU2F2ZWRXaXRoRXhwaXJlcyB9IGZyb20gXCIuL21vZHVsZXMvQHR5cGVzL3NhdmVkLmpzXCI7XHJcblxyXG5pbXBvcnQgeyBnZXRTYXZlZCwgc2V0U2F2ZWQgfSBmcm9tIFwiLi9tb2R1bGVzL3NhdmVkLmpzXCI7XHJcblxyXG5cclxuXHJcbigoeyBlZGl0b3IgfSkgPT4ge1xyXG5cdGlmKGxvY2F0aW9uLnBhdGhuYW1lICE9PSBcIi9zdWJtaXRwYWdlLnBocFwiKSByZXR1cm47XHJcblx0Ly9AdHMtZXhwZWN0LWVycm9yXHJcblx0Y29uc3QgZWRpdG9yRWxlbWVudCA9IGVkaXRvci50ZXh0SW5wdXQuZ2V0RWxlbWVudCgpIGFzIEhUTUxUZXh0QXJlYUVsZW1lbnQ7XHJcblx0Y29uc3Qgc2F2ZWQgPSBnZXRTYXZlZCgpO1xyXG5cclxuXHRjb25zdCBvbklucHV0ID0gKGV2ZW50OiBBY2VBamF4LkVkaXRvckNoYW5nZUV2ZW50IHwgS2V5Ym9hcmRFdmVudCk6IHZvaWQgPT4ge1xyXG5cdFx0Y29uc3QgeyByb3csIGNvbHVtbiB9ID0gZWRpdG9yLnNlbGVjdGlvbi5nZXRDdXJzb3IoKTtcclxuXHRcdGNvbnN0IGN1cnJlbnRDb2RlID0gZWRpdG9yLnNlc3Npb24uZ2V0VmFsdWUoKTtcclxuXHJcblx0XHRpZihyb3cgIT09IDAgJiYgY29sdW1uICE9PSAwKSB7XHJcblx0XHRcdHNldFNhdmVkKHtcclxuXHRcdFx0XHRjb2RlOiBjdXJyZW50Q29kZSxcclxuXHRcdFx0XHRjdXJzb3I6IHtcclxuXHRcdFx0XHRcdHJvdzogcm93LFxyXG5cdFx0XHRcdFx0Y29sdW1uOiBjb2x1bW5cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIDE4MDAwMDApO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cclxuXHRlZGl0b3Iuc2V0T3B0aW9ucyh7dXNlU29mdFRhYnM6IGZhbHNlfSk7XHJcblx0ZWRpdG9yLm9uKCdjbGljaycsIG9uSW5wdXQpO1xyXG5cdC8vZWRpdG9yLm9uKCdjaGFuZ2UnLCBvbklucHV0KTtcclxuXHRlZGl0b3JFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbklucHV0KTtcclxuXHJcblx0aWYoc2F2ZWQgPT09IG51bGwpIHtcclxuXHRcdGNvbnN0IGNvZGUgPSBgI2luY2x1ZGUgPHN0ZGlvLmg+XHJcblxyXG5pbnQgbWFpbigpIHtcclxuXFx0XHJcblxcdFxyXG5cXHRyZXR1cm4gMDtcclxufWA7XHJcblx0XHRlZGl0b3Iuc2Vzc2lvbi5zZXRWYWx1ZShgJHtjb2RlfWApO1xyXG5cdFx0ZWRpdG9yLmdvdG9MaW5lKDQsIDEpO1xyXG5cdH0gZWxzZSB7XHJcblx0XHRlZGl0b3Iuc2Vzc2lvbi5zZXRWYWx1ZShgJHtzYXZlZC5jb2RlfWApO1xyXG5cdFx0ZWRpdG9yLmdvdG9MaW5lKHNhdmVkLmN1cnNvci5yb3cgKyAxLCBzYXZlZC5jdXJzb3IuY29sdW1uKTtcclxuXHR9XHJcblx0ZWRpdG9yLmZvY3VzKCk7XHJcbn0pKHVuc2FmZVdpbmRvdyk7Il0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7OztBQUVBLEdBQU0sQ0FBRSxPQUFBQSxDQUFPLEVBQUksYUFJYkMsRUFBaUIsU0FBUyxjQUFjLGtCQUFrQixFQUF1QixNQUNqRkMsRUFBYyxVQUFVRCxJQUNqQkUsRUFBWSxJQUErQixLQUFLLE1BQU0sYUFBYSxRQUFRRCxDQUFXLENBQUUsRUFDeEZFLEVBQWUsSUFBWSxhQUFhLFdBQVdGLENBQVcsRUFDOURHLEVBQWMsSUFBbUIsQ0FDN0MsSUFBTUMsRUFBUUgsRUFBVSxFQUV4QixPQUFHRyxJQUFVLEtBQWEsS0FDdkIsS0FBSyxJQUFJLEVBQUlBLEVBQU0sU0FDckJGLEVBQWEsRUFDTixJQUNNLElBQ2YsRUFDYUcsRUFBVyxJQUFvQixDQUMzQyxJQUFNRCxFQUFRSCxFQUFVLEVBQ3hCLE9BQUdHLElBQVUsS0FBYSxLQUVuQkEsRUFBTSxLQUNkLEVBQ2FFLEVBQVcsQ0FBQ0MsRUFBMkJDLEVBQXFCLE1BQ2pFLGFBQWEsUUFBUVIsRUFBYSxLQUFLLFVBQVUsQ0FDdkQsTUFBT08sRUFDUCxRQUFTLEtBQUssSUFBSSxFQUFJQyxDQUN2QixDQUFDLENBQUMsRUFJSEwsRUFBWSxHQzNCWCxDQUFDLENBQUUsT0FBQU0sQ0FBTyxJQUFNLENBQ2hCLEdBQUcsU0FBUyxXQUFhLGtCQUFtQixPQUU1QyxJQUFNQyxFQUFnQkQsRUFBTyxVQUFVLFdBQVcsRUFDNUNFLEVBQVFDLEVBQVMsRUFFakJDLEVBQVdDLEdBQTJELENBQzNFLEdBQU0sQ0FBRSxJQUFBQyxFQUFLLE9BQUFDLENBQU8sRUFBSVAsRUFBTyxVQUFVLFVBQVUsRUFDN0NRLEVBQWNSLEVBQU8sUUFBUSxTQUFTLEVBRXpDTSxJQUFRLEdBQUtDLElBQVcsR0FDMUJFLEVBQVMsQ0FDUixLQUFNRCxFQUNOLE9BQVEsQ0FDUCxJQUFLRixFQUNMLE9BQVFDLENBQ1QsQ0FDRCxFQUFHLElBQU8sQ0FFWixFQVFBLEdBTEFQLEVBQU8sV0FBVyxDQUFDLFlBQWEsRUFBSyxDQUFDLEVBQ3RDQSxFQUFPLEdBQUcsUUFBU0ksQ0FBTyxFQUUxQkgsRUFBYyxpQkFBaUIsVUFBV0csQ0FBTyxFQUU5Q0YsSUFBVSxLQUFNLENBQ2xCLElBQU1RLEVBQU87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FPYlYsRUFBTyxRQUFRLFNBQVMsR0FBR1UsR0FBTSxFQUNqQ1YsRUFBTyxTQUFTLEVBQUcsQ0FBQyxPQUVwQkEsRUFBTyxRQUFRLFNBQVMsR0FBR0UsRUFBTSxNQUFNLEVBQ3ZDRixFQUFPLFNBQVNFLEVBQU0sT0FBTyxJQUFNLEVBQUdBLEVBQU0sT0FBTyxNQUFNLEVBRTFERixFQUFPLE1BQU0sQ0FDZCxHQUFHLFlBQVkiLAogICJuYW1lcyI6IFsiZWRpdG9yIiwgInByb2JsZW1OdW1iZXIiLCAic3RvcmFnZU5hbWUiLCAiX2dldFNhdmVkIiwgIl9yZW1vdmVTYXZlZCIsICJfY2xlYW5TYXZlZCIsICJzYXZlZCIsICJnZXRTYXZlZCIsICJzZXRTYXZlZCIsICJvYmoiLCAiZXhwaXJlRGF0ZSIsICJlZGl0b3IiLCAiZWRpdG9yRWxlbWVudCIsICJzYXZlZCIsICJnZXRTYXZlZCIsICJvbklucHV0IiwgImV2ZW50IiwgInJvdyIsICJjb2x1bW4iLCAiY3VycmVudENvZGUiLCAic2V0U2F2ZWQiLCAiY29kZSJdCn0K
