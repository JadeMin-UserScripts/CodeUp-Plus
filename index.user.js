// ==UserScript==
// @name		CodeUp+
// @description	CodeUp+
// @version		0.1.3
// @icon		https://icons.duckduckgo.com/ip2/codeup.kr.ico
// @updateURL	https://github.com/JadeMin-UserScripts/CodeUp-Plus/raw/main/index.user.js
// @downloadURL	https://github.com/JadeMin-UserScripts/CodeUp-Plus/raw/main/index.user.js
// @match		https://*.codeup.kr/*
// @run-at		document-end
// ==/UserScript==
"use strict";(()=>{var{editor:S}=unsafeWindow,v=document.querySelector("input#problem_id").value,o=`editor_${v}`,c=()=>JSON.parse(localStorage.getItem(o)),p=()=>localStorage.removeItem(o),m=()=>{let e=c();return e===null?null:Date.now()>e.expires?(p(),!0):null};m();var s=()=>{let e=c();return e===null?null:e.value},i=(e,n)=>{let t=s();return localStorage.setItem(o,JSON.stringify({value:e,expires:Date.now()+n}))};(({editor:e})=>{if(location.pathname!=="/submitpage.php")return;let n=e.textInput.getElement(),t=s(),r=a=>{let{row:l,column:u}=e.selection.getCursor(),d=e.session.getValue();l!==0&&u!==0&&i({code:d,cursor:{row:l,column:u}},18e5)};if(e.setOptions({useSoftTabs:!1}),e.on("click",r),n.addEventListener("keydown",r),t===null){let a=`#include <stdio.h>

int main() {
	
	
	return 0;
}`;e.session.setValue(`${a}`),e.gotoLine(4,1)}else e.session.setValue(`${t.code}`),e.gotoLine(t.cursor.row+1,t.cursor.column);e.focus()})(unsafeWindow);})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL21vZHVsZXMvc2F2ZWQudHMiLCAiLi4vc3JjL2luZGV4LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgdHlwZSB7IFNhdmVkLCBTYXZlZFdpdGhFeHBpcmVzIH0gZnJvbSBcIi4vQHR5cGVzL3NhdmVkLmpzXCI7XHJcblxyXG5jb25zdCB7IGVkaXRvciB9ID0gdW5zYWZlV2luZG93O1xyXG5cclxuXHJcblxyXG5jb25zdCBwcm9ibGVtTnVtYmVyID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dCNwcm9ibGVtX2lkXCIpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlO1xyXG5jb25zdCBzdG9yYWdlTmFtZSA9IGBlZGl0b3JfJHtwcm9ibGVtTnVtYmVyfWA7XHJcbmV4cG9ydCBjb25zdCBfZ2V0U2F2ZWQgPSAoKTogU2F2ZWRXaXRoRXhwaXJlcyB8IG51bGwgPT4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlTmFtZSkhKTtcclxuZXhwb3J0IGNvbnN0IF9yZW1vdmVTYXZlZCA9ICgpOiB2b2lkID0+IGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHN0b3JhZ2VOYW1lKTtcclxuZXhwb3J0IGNvbnN0IGNsZWFuU2F2ZWQgPSAoKTogdHJ1ZSB8IG51bGwgPT4ge1xyXG5cdGNvbnN0IHNhdmVkID0gX2dldFNhdmVkKCk7XHJcblx0aWYoc2F2ZWQgPT09IG51bGwpIHJldHVybiBudWxsXHJcblx0aWYoRGF0ZS5ub3coKSA+IHNhdmVkLmV4cGlyZXMpIHtcclxuXHRcdF9yZW1vdmVTYXZlZCgpO1xyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fSBlbHNlIHJldHVybiBudWxsO1xyXG59O1xyXG5cclxuY2xlYW5TYXZlZCgpO1xyXG5leHBvcnQgY29uc3QgZ2V0U2F2ZWQgPSAoKTogU2F2ZWQgfCBudWxsID0+IHtcclxuXHRjb25zdCBzYXZlZCA9IF9nZXRTYXZlZCgpO1xyXG5cdGlmKHNhdmVkID09PSBudWxsKSByZXR1cm4gbnVsbDtcclxuXHJcblx0cmV0dXJuIHNhdmVkLnZhbHVlO1xyXG59O1xyXG5leHBvcnQgY29uc3Qgc2V0U2F2ZWQgPSAob2JqOiB7W2tleTogc3RyaW5nXTogYW55fSwgZXhwaXJlRGF0ZTogbnVtYmVyKTogdm9pZCA9PiB7XHJcblx0Y29uc3Qgc2F2ZWQgPSBnZXRTYXZlZCgpO1xyXG5cclxuXHRyZXR1cm4gbG9jYWxTdG9yYWdlLnNldEl0ZW0oc3RvcmFnZU5hbWUsIEpTT04uc3RyaW5naWZ5KHtcclxuXHRcdHZhbHVlOiBvYmosXHJcblx0XHRleHBpcmVzOiBEYXRlLm5vdygpICsgZXhwaXJlRGF0ZVxyXG5cdH0pKTtcclxufTsiLCAiaW1wb3J0IHR5cGUgeyBTYXZlZFdpdGhFeHBpcmVzIH0gZnJvbSBcIi4vbW9kdWxlcy9AdHlwZXMvc2F2ZWQuanNcIjtcclxuXHJcbmltcG9ydCB7IGdldFNhdmVkLCBzZXRTYXZlZCB9IGZyb20gXCIuL21vZHVsZXMvc2F2ZWQuanNcIjtcclxuXHJcblxyXG5cclxuKCh7IGVkaXRvciB9KSA9PiB7XHJcblx0aWYobG9jYXRpb24ucGF0aG5hbWUgIT09IFwiL3N1Ym1pdHBhZ2UucGhwXCIpIHJldHVybjtcclxuXHQvL0B0cy1leHBlY3QtZXJyb3JcclxuXHRjb25zdCBlZGl0b3JFbGVtZW50ID0gZWRpdG9yLnRleHRJbnB1dC5nZXRFbGVtZW50KCkgYXMgSFRNTFRleHRBcmVhRWxlbWVudDtcclxuXHRjb25zdCBzYXZlZCA9IGdldFNhdmVkKCk7XHJcblxyXG5cdGNvbnN0IG9uSW5wdXQgPSAoZXZlbnQ6IEFjZUFqYXguRWRpdG9yQ2hhbmdlRXZlbnQgfCBLZXlib2FyZEV2ZW50KTogdm9pZCA9PiB7XHJcblx0XHRjb25zdCB7IHJvdywgY29sdW1uIH0gPSBlZGl0b3Iuc2VsZWN0aW9uLmdldEN1cnNvcigpO1xyXG5cdFx0Y29uc3QgY3VycmVudENvZGUgPSBlZGl0b3Iuc2Vzc2lvbi5nZXRWYWx1ZSgpO1xyXG5cclxuXHRcdGlmKHJvdyAhPT0gMCAmJiBjb2x1bW4gIT09IDApIHtcclxuXHRcdFx0c2V0U2F2ZWQoe1xyXG5cdFx0XHRcdGNvZGU6IGN1cnJlbnRDb2RlLFxyXG5cdFx0XHRcdGN1cnNvcjoge1xyXG5cdFx0XHRcdFx0cm93OiByb3csXHJcblx0XHRcdFx0XHRjb2x1bW46IGNvbHVtblxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSwgMTgwMDAwMCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblxyXG5cdGVkaXRvci5zZXRPcHRpb25zKHt1c2VTb2Z0VGFiczogZmFsc2V9KTtcclxuXHRlZGl0b3Iub24oJ2NsaWNrJywgb25JbnB1dCk7XHJcblx0Ly9lZGl0b3Iub24oJ2NoYW5nZScsIG9uSW5wdXQpO1xyXG5cdGVkaXRvckVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIG9uSW5wdXQpO1xyXG5cclxuXHRpZihzYXZlZCA9PT0gbnVsbCkge1xyXG5cdFx0Y29uc3QgY29kZSA9IGAjaW5jbHVkZSA8c3RkaW8uaD5cclxuXHJcbmludCBtYWluKCkge1xyXG5cXHRcclxuXFx0XHJcblxcdHJldHVybiAwO1xyXG59YDtcclxuXHRcdGVkaXRvci5zZXNzaW9uLnNldFZhbHVlKGAke2NvZGV9YCk7XHJcblx0XHRlZGl0b3IuZ290b0xpbmUoNCwgMSk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGVkaXRvci5zZXNzaW9uLnNldFZhbHVlKGAke3NhdmVkLmNvZGV9YCk7XHJcblx0XHRlZGl0b3IuZ290b0xpbmUoc2F2ZWQuY3Vyc29yLnJvdyArIDEsIHNhdmVkLmN1cnNvci5jb2x1bW4pO1xyXG5cdH1cclxuXHRlZGl0b3IuZm9jdXMoKTtcclxufSkodW5zYWZlV2luZG93KTsiXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7O21CQUVBLEdBQU0sQ0FBRSxPQUFBQSxDQUFPLEVBQUksYUFJYkMsRUFBaUIsU0FBUyxjQUFjLGtCQUFrQixFQUF1QixNQUNqRkMsRUFBYyxVQUFVRCxJQUNqQkUsRUFBWSxJQUErQixLQUFLLE1BQU0sYUFBYSxRQUFRRCxDQUFXLENBQUUsRUFDeEZFLEVBQWUsSUFBWSxhQUFhLFdBQVdGLENBQVcsRUFDOURHLEVBQWEsSUFBbUIsQ0FDNUMsSUFBTUMsRUFBUUgsRUFBVSxFQUN4QixPQUFHRyxJQUFVLEtBQWEsS0FDdkIsS0FBSyxJQUFJLEVBQUlBLEVBQU0sU0FDckJGLEVBQWEsRUFDTixJQUNNLElBQ2YsRUFFQUMsRUFBVyxFQUNKLElBQU1FLEVBQVcsSUFBb0IsQ0FDM0MsSUFBTUQsRUFBUUgsRUFBVSxFQUN4QixPQUFHRyxJQUFVLEtBQWEsS0FFbkJBLEVBQU0sS0FDZCxFQUNhRSxFQUFXLENBQUNDLEVBQTJCQyxJQUE2QixDQUNoRixJQUFNSixFQUFRQyxFQUFTLEVBRXZCLE9BQU8sYUFBYSxRQUFRTCxFQUFhLEtBQUssVUFBVSxDQUN2RCxNQUFPTyxFQUNQLFFBQVMsS0FBSyxJQUFJLEVBQUlDLENBQ3ZCLENBQUMsQ0FBQyxDQUNILEdDM0JDLENBQUMsQ0FBRSxPQUFBQyxDQUFPLElBQU0sQ0FDaEIsR0FBRyxTQUFTLFdBQWEsa0JBQW1CLE9BRTVDLElBQU1DLEVBQWdCRCxFQUFPLFVBQVUsV0FBVyxFQUM1Q0UsRUFBUUMsRUFBUyxFQUVqQkMsRUFBV0MsR0FBMkQsQ0FDM0UsR0FBTSxDQUFFLElBQUFDLEVBQUssT0FBQUMsQ0FBTyxFQUFJUCxFQUFPLFVBQVUsVUFBVSxFQUM3Q1EsRUFBY1IsRUFBTyxRQUFRLFNBQVMsRUFFekNNLElBQVEsR0FBS0MsSUFBVyxHQUMxQkUsRUFBUyxDQUNSLEtBQU1ELEVBQ04sT0FBUSxDQUNQLElBQUtGLEVBQ0wsT0FBUUMsQ0FDVCxDQUNELEVBQUcsSUFBTyxDQUVaLEVBUUEsR0FMQVAsRUFBTyxXQUFXLENBQUMsWUFBYSxFQUFLLENBQUMsRUFDdENBLEVBQU8sR0FBRyxRQUFTSSxDQUFPLEVBRTFCSCxFQUFjLGlCQUFpQixVQUFXRyxDQUFPLEVBRTlDRixJQUFVLEtBQU0sQ0FDbEIsSUFBTVEsRUFBTztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQU9iVixFQUFPLFFBQVEsU0FBUyxHQUFHVSxHQUFNLEVBQ2pDVixFQUFPLFNBQVMsRUFBRyxDQUFDLE9BRXBCQSxFQUFPLFFBQVEsU0FBUyxHQUFHRSxFQUFNLE1BQU0sRUFDdkNGLEVBQU8sU0FBU0UsRUFBTSxPQUFPLElBQU0sRUFBR0EsRUFBTSxPQUFPLE1BQU0sRUFFMURGLEVBQU8sTUFBTSxDQUNkLEdBQUcsWUFBWSIsCiAgIm5hbWVzIjogWyJlZGl0b3IiLCAicHJvYmxlbU51bWJlciIsICJzdG9yYWdlTmFtZSIsICJfZ2V0U2F2ZWQiLCAiX3JlbW92ZVNhdmVkIiwgImNsZWFuU2F2ZWQiLCAic2F2ZWQiLCAiZ2V0U2F2ZWQiLCAic2V0U2F2ZWQiLCAib2JqIiwgImV4cGlyZURhdGUiLCAiZWRpdG9yIiwgImVkaXRvckVsZW1lbnQiLCAic2F2ZWQiLCAiZ2V0U2F2ZWQiLCAib25JbnB1dCIsICJldmVudCIsICJyb3ciLCAiY29sdW1uIiwgImN1cnJlbnRDb2RlIiwgInNldFNhdmVkIiwgImNvZGUiXQp9Cg==
